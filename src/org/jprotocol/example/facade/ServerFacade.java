package org.jprotocol.example.facade;
import org.jprotocol.framework.test.ProtocolMockery;
import org.jprotocol.example.api.*;
import org.jprotocol.framework.handler.Handler.Type;
import org.jprotocol.framework.handler.IFlushable;
import org.jprotocol.example.handler.DefaultHandlerHierarchyWithMockery;
import org.jprotocol.framework.facade.*;
/**
* This class is generated by DefaultFacadeGenerator.groovy
* @author eliasa01
*/
public class ServerFacade extends AbstractServerFacade {
    private final DefaultHandlerHierarchyWithMockery hierarchy;
    private final RequestAPIFactory requestFactory;
    private final ResponseAPIFactory responseFactory;
    public ServerFacade(IFlushable flushable) {
        super(flushable, Type.Server);
        requestFactory = new RequestAPIFactory();
        responseFactory = new ResponseAPIFactory();
        hierarchy = createHierarchy();
    }
    /**
    * Override to provide specialized implementation
    */
    protected DefaultHandlerHierarchyWithMockery createHierarchy() {
        return new DefaultHandlerHierarchyWithMockery(type, flushable);
    }
    public RequestAPIFactory requests() {
        return requestFactory;
    }
    public ResponseAPIFactory responses() {
        return responseFactory;
    }
    @Override protected ProtocolMockery getMockery() {
        return hierarchy.mockery;
    }
    @Override public void receive(byte[] data) {
        hierarchy.receive(data);
    }
}
