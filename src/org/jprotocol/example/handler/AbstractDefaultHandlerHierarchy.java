package org.jprotocol.example.handler;
import org.jprotocol.framework.handler.*;
import org.jprotocol.framework.logger.IProtocolLogger;
import org.jprotocol.framework.handler.Handler.Type;
/**
* This class is generated by DefaultHandlerHierarchyGenerator.groovy
* @author eliasa01
*/
abstract public class AbstractDefaultHandlerHierarchy extends AbstractHandlerHierarchy {
    public AbstractDefaultHandlerHierarchy(Type type, final IFlushable flushable, IProtocolState protocolState, IProtocolSniffer sniffer, IProtocolLogger logger) {
        super(type, flushable, protocolState, sniffer, logger);
    }
    protected Handler<?, ?> createMyLeafProtocolAHandler(HandlerContext context) {
        return new DefaultMyLeafProtocolAHandler(context);
    }
    protected Handler<?, ?> createMyLeafProtocolBHandler(HandlerContext context) {
        return new DefaultMyLeafProtocolBHandler(context);
    }
    protected Handler<?, ?> createMyMiddleProtocolAHandler(HandlerContext context) {
        return new DefaultMyMiddleProtocolAHandler(context);
    }
    protected Handler<?, ?> createMyMiddleProtocolBHandler(HandlerContext context) {
        return new DefaultMyMiddleProtocolBHandler(context);
    }
    @Override protected Handler<?, ?> createRoot() {
        return new DefaultMyRootProtocolHandler(getRootContext(), flushable, logger);
    }
}
